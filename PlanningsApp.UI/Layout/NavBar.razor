@using PlanningsApp.Ui.Models
@using PlanningsApp.Ui.Services.Interfaces
@if (!_isLoading && _departments != null)
{
    <MudNavMenu Style="margin-top: 75px" Margin="Margin.Normal" Color="Color.Secondary">
        <MudNavLink Style="height: 65px" Icon="@Icons.Material.Filled.Home" Href="/" Match="NavLinkMatch.All">Home
        </MudNavLink>
        <MudNavLink Style="height: 65px" Icon="@Icons.Material.Filled.Groups2" Href="/coverage" Match="NavLinkMatch.All">
            Coverage
        </MudNavLink>
        <MudNavGroup Icon="@Icons.Material.Outlined.CalendarMonth" Title="Planning" @bind-Expanded="_expanded">

            @foreach (Department department in _departments)
            {
                <MudNavLink Href="@($"/planning/{department.Name}".ToLower())">
                    @department.Name
                </MudNavLink>
            }
        </MudNavGroup>
        <MudNavLink Style="height: 65px" Icon="@Icons.Material.Outlined.NoAccounts" Href="/absence"
            Match="NavLinkMatch.Prefix">Absence
        </MudNavLink>
        <MudNavLink Style="height: 65px" Icon="@Icons.Material.Outlined.Settings" Href="/settings"
            Match="NavLinkMatch.Prefix">Settings
        </MudNavLink>
    </MudNavMenu>
}

@code {
    private bool _isLoading = true;
    private List<Department> _departments;
    [Inject] public IDepartmentService DepartmentService { get; set; }
    [Inject] public ISnackbar Snackbar { get; set; }
    bool _expanded = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _departments = await DepartmentService.GetDepartmentsAsync();
            _isLoading = false;
            StateHasChanged();
        }
        catch (Exception e)
        {
            Snackbar.Add("Failed to load departments", Severity.Error);
        }
    }

}